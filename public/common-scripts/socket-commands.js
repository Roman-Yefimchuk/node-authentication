"use strict";

(function () {

    var rootContext = this;

    var SocketCommands = {
        USER_CONNECTION: 'USER_CONNECTION',
        USER_CONNECTED: 'USER_CONNECTED',
        USER_DISCONNECTED: 'USER_DISCONNECTED',
        CHANGED_WORKSPACE: 'CHANGED_WORKSPACE',
        UPDATED_WORKSPACE: 'UPDATED_WORKSPACE',
        REMOVED_WORKSPACE: 'REMOVED_WORKSPACE',
        ADDED_ITEM: 'ADDED_ITEM',
        UPDATED_ITEM: 'UPDATED_ITEM',
        REMOVED_ITEM: 'REMOVED_ITEM',
        PERMISSIONS_CHANGED: 'PERMISSIONS_CHANGED',
        UPDATE_PRESENT_USERS: 'UPDATE_PRESENT_USERS',
        START_LECTURE: 'START_LECTURE',
        LECTURE_STARTED: 'LECTURE_STARTED',
        RESUME_LECTURE: 'RESUME_LECTURE',
        LECTURE_RESUMED: 'LECTURE_RESUMED',
        SUSPEND_LECTURE: 'SUSPEND_LECTURE',
        LECTURE_SUSPENDED: 'LECTURE_SUSPENDED',
        STOP_LECTURE: 'STOP_LECTURE',
        LECTURE_STOPPED: 'LECTURE_STOPPED',
        GET_LECTURE_DURATION: 'GET_LECTURE_DURATION',
        UPDATE_LECTURE_DURATION: 'UPDATE_LECTURE_DURATION',
        GET_TOTAL_LECTURE_DURATION: 'GET_TOTAL_LECTURE_DURATION',
        UPDATE_TOTAL_LECTURE_DURATION: 'UPDATE_TOTAL_LECTURE_DURATION',
        ASK_QUESTION: 'ASK_QUESTION',
        QUESTION_ASKED: 'QUESTION_ASKED',
        GET_QUESTION_INFO: 'GET_QUESTION_INFO',
        UPDATE_QUESTION_INFO: 'UPDATE_QUESTION_INFO',
        GET_PRESENT_LISTENERS: 'GET_PRESENT_LISTENERS',
        UPDATE_PRESENT_LISTENERS: 'UPDATE_PRESENT_LISTENERS',
        JOIN_TO_LECTURE: 'JOIN_TO_LECTURE',
        LISTENER_JOINED: 'LISTENER_JOINED',
        LEFT_FROM_LECTURE: 'LEFT_FROM_LECTURE',
        LISTENER_HAS_LEFT: 'LISTENER_HAS_LEFT',
        SEND_MESSAGE: 'SEND_MESSAGE',
        ON_MESSAGE: 'ON_MESSAGE',
        REPLY_FOR_TEACHER_QUESTION: 'REPLY_FOR_TEACHER_QUESTION',
        UPDATE_STATISTIC: 'UPDATE_STATISTIC',
        UPDATE_CHART: 'UPDATE_CHART'
    };

    if (typeof exports !== 'undefined') {
        if (typeof module !== 'undefined' && module.exports) {
            exports = module.exports = SocketCommands;
        }
        exports.SocketCommands = SocketCommands;
    } else {
        rootContext.SocketCommands = SocketCommands;
    }

}.call(this));